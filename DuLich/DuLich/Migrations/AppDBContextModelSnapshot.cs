// <auto-generated />
using System;
using DuLich.Repository.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DuLich.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ViewModel.Models.BinhLuanKhachSan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdKhachSan")
                        .HasColumnType("int");

                    b.Property<int?>("IdNguoiDung")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdKhachSan");

                    b.HasIndex("IdNguoiDung");

                    b.ToTable("BinhLuanKhachSan");
                });

            modelBuilder.Entity("ViewModel.Models.BinhLuanNhaHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdNguoiDung")
                        .HasColumnType("int");

                    b.Property<int?>("IdNhaHang")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdNhaHang");

                    b.ToTable("BinhLuanNhaHang");
                });

            modelBuilder.Entity("ViewModel.Models.BinhLuanVanChuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdNguoiDung")
                        .HasColumnType("int");

                    b.Property<int?>("IdVanChuyen")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdVanChuyen");

                    b.ToTable("BinhLuanVanChuyen");
                });

            modelBuilder.Entity("ViewModel.Models.DatKhachSan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdKhachSan")
                        .HasColumnType("int");

                    b.Property<int?>("IdNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdKhachSan");

                    b.HasIndex("IdNguoiDung");

                    b.ToTable("DatKhachSans");
                });

            modelBuilder.Entity("ViewModel.Models.DatNhaHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdNguoiDung")
                        .HasColumnType("int");

                    b.Property<int?>("IdNhaHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdNhaHang");

                    b.ToTable("DatNhaHangs");
                });

            modelBuilder.Entity("ViewModel.Models.DatTour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdNguoiDung")
                        .HasColumnType("int");

                    b.Property<int?>("IdTour")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdTour");

                    b.ToTable("DatTours");
                });

            modelBuilder.Entity("ViewModel.Models.DatVanChuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdNguoiDung")
                        .HasColumnType("int");

                    b.Property<int?>("IdVanChuyen")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdVanChuyen");

                    b.ToTable("DatVanChuyens");
                });

            modelBuilder.Entity("ViewModel.Models.DiemThamQuan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChuDichVu")
                        .HasColumnType("int");

                    b.Property<string>("DiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenDiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChuDichVu");

                    b.ToTable("DiemThamQuans");
                });

            modelBuilder.Entity("ViewModel.Models.DiemThamQuanCT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnhChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDichVu")
                        .HasColumnType("int");

                    b.Property<string>("MoTaDichVu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaDichVu")
                        .IsUnique();

                    b.ToTable("DiemThamQuanCTs");
                });

            modelBuilder.Entity("ViewModel.Models.KhachSan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChiTietKhachSan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChuDichVu")
                        .HasColumnType("int");

                    b.Property<int>("DanhGia")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<string>("MoTaKhachSan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachSan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChuDichVu");

                    b.ToTable("KhachSans");
                });

            modelBuilder.Entity("ViewModel.Models.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhanQuyen")
                        .HasColumnType("int");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NguoiDungs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnhDaiDien = "default-avatar.jpg",
                            CCCD = "123456789",
                            Email = "admin@admin.com",
                            GioiTinh = 1,
                            HoTen = "Admin",
                            MatKhau = "admin1",
                            NoiO = "Ha Noi",
                            PhanQuyen = 0,
                            Sdt = "0123456789",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("ViewModel.Models.NhaHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChiTietNhaHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChuDichVu")
                        .HasColumnType("int");

                    b.Property<int>("DanhGia")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTaNhaHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChuDichVu");

                    b.ToTable("NhaHangs");
                });

            modelBuilder.Entity("ViewModel.Models.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChiTietTour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChuTour")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaTour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HinhAnhTour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("KhuyenMaiTour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LuotDanhGia")
                        .HasColumnType("int");

                    b.Property<string>("MoTaTour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoNgay")
                        .HasColumnType("int");

                    b.Property<string>("TenTour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChuTour");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("ViewModel.Models.TourCT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChiTietLichTrinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChuTour")
                        .HasColumnType("int");

                    b.Property<string>("DiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LichTrinhNgay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaTour")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaTour")
                        .IsUnique();

                    b.ToTable("TourCTs");
                });

            modelBuilder.Entity("ViewModel.Models.VanChuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChiTietDiemDi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChiTietDiemDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChuDichVu")
                        .HasColumnType("int");

                    b.Property<string>("DiaChiDi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaiXe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChuDichVu");

                    b.ToTable("VanChuyens");
                });

            modelBuilder.Entity("ViewModel.Models.BinhLuanKhachSan", b =>
                {
                    b.HasOne("ViewModel.Models.KhachSan", "KhachSan")
                        .WithMany("BinhLuanKhachSans")
                        .HasForeignKey("IdKhachSan");

                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany("BinhLuanKhachSans")
                        .HasForeignKey("IdNguoiDung");

                    b.Navigation("KhachSan");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("ViewModel.Models.BinhLuanNhaHang", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany("BinhLuanNhaHangs")
                        .HasForeignKey("IdNguoiDung");

                    b.HasOne("ViewModel.Models.NhaHang", "NhaHang")
                        .WithMany("BinhLuanNhaHangs")
                        .HasForeignKey("IdNhaHang");

                    b.Navigation("NguoiDung");

                    b.Navigation("NhaHang");
                });

            modelBuilder.Entity("ViewModel.Models.BinhLuanVanChuyen", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany("BinhLuanVanChuyens")
                        .HasForeignKey("IdNguoiDung");

                    b.HasOne("ViewModel.Models.VanChuyen", "VanChuyen")
                        .WithMany("BinhLuanVanChuyens")
                        .HasForeignKey("IdVanChuyen");

                    b.Navigation("NguoiDung");

                    b.Navigation("VanChuyen");
                });

            modelBuilder.Entity("ViewModel.Models.DatKhachSan", b =>
                {
                    b.HasOne("ViewModel.Models.KhachSan", "KhachSan")
                        .WithMany("DatKhachSans")
                        .HasForeignKey("IdKhachSan");

                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany("DatKhachSans")
                        .HasForeignKey("IdNguoiDung");

                    b.Navigation("KhachSan");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("ViewModel.Models.DatNhaHang", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany("DatNhaHangs")
                        .HasForeignKey("IdNguoiDung");

                    b.HasOne("ViewModel.Models.NhaHang", "NhaHang")
                        .WithMany("DatNhaHangs")
                        .HasForeignKey("IdNhaHang");

                    b.Navigation("NguoiDung");

                    b.Navigation("NhaHang");
                });

            modelBuilder.Entity("ViewModel.Models.DatTour", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany("DatTours")
                        .HasForeignKey("IdNguoiDung");

                    b.HasOne("ViewModel.Models.Tour", "Tour")
                        .WithMany("DatTours")
                        .HasForeignKey("IdTour");

                    b.Navigation("NguoiDung");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("ViewModel.Models.DatVanChuyen", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany("DatVanChuyens")
                        .HasForeignKey("IdNguoiDung");

                    b.HasOne("ViewModel.Models.VanChuyen", "VanChuyen")
                        .WithMany("DatVanChuyens")
                        .HasForeignKey("IdVanChuyen");

                    b.Navigation("NguoiDung");

                    b.Navigation("VanChuyen");
                });

            modelBuilder.Entity("ViewModel.Models.DiemThamQuan", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("ChuDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("ViewModel.Models.DiemThamQuanCT", b =>
                {
                    b.HasOne("ViewModel.Models.DiemThamQuan", "DiemThamQuan")
                        .WithOne("DiemThamQuanCT")
                        .HasForeignKey("ViewModel.Models.DiemThamQuanCT", "MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiemThamQuan");
                });

            modelBuilder.Entity("ViewModel.Models.KhachSan", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("ChuDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("ViewModel.Models.NhaHang", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("ChuDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("ViewModel.Models.Tour", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("ChuTour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("ViewModel.Models.TourCT", b =>
                {
                    b.HasOne("ViewModel.Models.Tour", "Tour")
                        .WithOne("TourCT")
                        .HasForeignKey("ViewModel.Models.TourCT", "MaTour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("ViewModel.Models.VanChuyen", b =>
                {
                    b.HasOne("ViewModel.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("ChuDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("ViewModel.Models.DiemThamQuan", b =>
                {
                    b.Navigation("DiemThamQuanCT");
                });

            modelBuilder.Entity("ViewModel.Models.KhachSan", b =>
                {
                    b.Navigation("BinhLuanKhachSans");

                    b.Navigation("DatKhachSans");
                });

            modelBuilder.Entity("ViewModel.Models.NguoiDung", b =>
                {
                    b.Navigation("BinhLuanKhachSans");

                    b.Navigation("BinhLuanNhaHangs");

                    b.Navigation("BinhLuanVanChuyens");

                    b.Navigation("DatKhachSans");

                    b.Navigation("DatNhaHangs");

                    b.Navigation("DatTours");

                    b.Navigation("DatVanChuyens");
                });

            modelBuilder.Entity("ViewModel.Models.NhaHang", b =>
                {
                    b.Navigation("BinhLuanNhaHangs");

                    b.Navigation("DatNhaHangs");
                });

            modelBuilder.Entity("ViewModel.Models.Tour", b =>
                {
                    b.Navigation("DatTours");

                    b.Navigation("TourCT");
                });

            modelBuilder.Entity("ViewModel.Models.VanChuyen", b =>
                {
                    b.Navigation("BinhLuanVanChuyens");

                    b.Navigation("DatVanChuyens");
                });
#pragma warning restore 612, 618
        }
    }
}
